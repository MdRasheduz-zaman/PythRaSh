{
  "hash": "4fcdd1db4c794adca28d4dfd0583d591",
  "result": {
    "markdown": "---\ntitle: \"Linux Basics\"\nabstract: \"Linux, WSL2, Navigation, simple commands\"\n---\n\n\n\n\n# Linux and WSL2\n\nIf you have Linux already, stay calm. Scrol down to learn things instead of installing WSL2. \n\nTry to use Linux to do better in life. The black screen of Linux is way more powerful than you (probably) know till now. Follow this [step-by-step guide](https://ubuntu.com/tutorials/install-ubuntu-desktop#1-overview) to install Ubuntu (a Linux distribution).\n\nFollow this pages to install `Windows Subsystem for Linux` if you are using Windows. Then you can use the WSL just like a native Linux using your system. You can't do anything except using Linux to analyse Genomic (sequencing) data. So, **better start now**.\n\nFollow [link1](https://learn.microsoft.com/en-us/windows/wsl/about) & [link2](https://learn.microsoft.com/en-us/windows/wsl/install) to get step-by-step guideline to do it.\n\nA pro tip will be **update your kernel first and then try**. But here goes something. \n\n# Basic Linux Commands\n\nNow that you have Linux/WSL2 set up, let's learn the essential commands. These are the building blocks of working with Linux.\n\n## Navigation Commands\n\n### `pwd` - Print Working Directory\nShows your current location in the file system.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Show current directory\npwd\n```\n:::\n\n\n### `ls` - List Directory Contents\nLists files and folders in the current directory.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Basic listing\nls\n\n# Detailed listing with permissions, size, date\nls -l\n\n# List all files including hidden ones (starting with .)\nls -la\n\n# List with human-readable file sizes\nls -lh\n```\n:::\n\n::: {.cell}\n\n```{.bash .cell-code}\n# List files in a specific directory\nls /home/username\n```\n:::\n\n\n### `cd` - Change Directory\nNavigate between directories.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Go to home directory\ncd ~\n# or simply\ncd\n\n# Go to parent directory\ncd ..\n\n# Go to root directory\ncd /\n\n# Go back to previous directory\ncd -\n#or \ncd .\n```\n:::\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Go to a specific directory\ncd /home/username/Documents\n```\n:::\n\n\n## File and Directory Operations\n\n### `mkdir` - Make Directory\nCreate new directories.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Create a single directory\nmkdir my_folder\n\n# Create multiple directories\nmkdir folder1 folder2 folder3\n\n# Create nested directories\nmkdir -p project/data/raw\n\n# Create directory with specific permissions\nmkdir -m 755 public_folder\n```\n:::\n\n\n### `touch` - Create Empty Files\nCreate empty files or update file timestamps.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Create an empty file\ntouch my_file.txt\n\n# Create multiple files\ntouch file1.txt file2.txt file3.txt\n\n# Update file timestamp (useful for makefiles)\ntouch existing_file.txt\n```\n:::\n\n\n### `cp` - Copy Files and Directories\nCopy files and directories.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Copy a file\ncp source.txt destination.txt\n```\n:::\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Copy file to a directory\ncp file.txt /path/to/directory/\n\n# Copy directory recursively\ncp -r source_directory/ destination_directory/\n\n# Copy with preservation of attributes\ncp -p file.txt backup/\n\n# Copy multiple files\ncp file1.txt file2.txt destination_folder/\n```\n:::\n\n\n### `mv` - Move/Rename Files and Directories\nMove or rename files and directories.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Rename a file\nmv old_name.txt new_name.txt\n```\n:::\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Move file to directory\nmv file.txt /path/to/directory/\n\n# Move directory\nmv source_directory/ destination_directory/\n\n# Move and rename in one step\nmv file.txt /new/location/renamed_file.txt\n```\n:::\n\n\n### `rm` - Remove Files and Directories\nDelete files and directories.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Remove a file\nrm file.txt\n\n# Remove multiple files\nrm file1.txt file2.txt file3.txt\n\n# Remove directory and all contents (BE CAREFUL!)\nrm -r directory_name/\n\n# Remove directory with confirmation\nrm -ri directory_name/\n\n# Remove empty directory only\nrmdir empty_directory/\n\n# Remove files with confirmation\nrm -i *.txt\n```\n:::\n\n\n## File Permissions\n\nUnderstanding file permissions is crucial for Linux security.\n\n### Viewing Permissions\n\n::: {.cell}\n\n```{.bash .cell-code}\n# List files with permissions\nls -l\n\n# Example output:\n# -rw-r--r-- 1 username group 1234 Dec 15 10:30 file.txt\n# drwxr-xr-x 2 username group 4096 Dec 15 10:30 folder/\n```\n:::\n\n\nThe permission string has 10 characters:\n- **Position 1**: File type (`-` for file, `d` for directory)\n- **Positions 2-4**: Owner permissions (read, write, execute)\n- **Positions 5-7**: Group permissions (read, write, execute)\n- **Positions 8-10**: Other permissions (read, write, execute)\n\n### `chmod` - Change File Permissions\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Give owner read, write, execute; group and others read, execute\nchmod 755 script.sh\n\n# Give owner read, write; group and others read only\nchmod 644 file.txt\n\n# Add execute permission for owner\nchmod +x script.sh\n\n# Remove write permission for group and others\nchmod go-w file.txt\n\n# Make file readable by everyone\nchmod a+r file.txt\n```\n:::\n\n\n### `chown` - Change File Ownership\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Change owner\nchown newowner file.txt\n\n# Change owner and group\nchown newowner:newgroup file.txt\n\n# Change ownership recursively\nchown -R newowner:newgroup directory/\n```\n:::\n\n\n## Text Editing\n\n### `nano` - Simple Text Editor\nGreat for beginners.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Open file in nano\nnano filename.txt\n\n# Create new file\nnano new_file.txt\n```\n:::\n\n\n**Nano shortcuts:**\n- `Ctrl + X`: Exit\n- `Ctrl + O`: Save\n- `Ctrl + W`: Search\n- `Ctrl + K`: Cut line\n- `Ctrl + U`: Paste\n\n### `vim` - Advanced Text Editor\nMore powerful but steeper learning curve.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Open file in vim\nvim filename.txt\n\n# Create new file\nvim new_file.txt\n```\n:::\n\nSo, creating and opening command is basically the same. Just write the file name.\nAfter opening the file, you have toenter into editing/inserting mode. Press `i` on your keyboard to be able to insert/write (or copy-paste) contents. After finishing editing, press `Esc` key to come out of the editing mode. Then write `:wq` to save.\n\n**Basic vim commands:**\n- `i`: Enter insert mode\n- `Esc`: Exit insert mode\n- `:w`: Save\n- `:q`: Quit\n- `:wq`: Save and quit\n- `:q!`: Quit without saving\n\n## Viewing File Contents\n\n### `cat` - Display File Contents\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Display entire file\ncat file.txt\n\n# Display multiple files\ncat file1.txt file2.txt\n\n# Display with line numbers\ncat -n file.txt\n```\n:::\n\n\n### `less` - View File Page by Page\n\n::: {.cell}\n\n```{.bash .cell-code}\n# View file with pagination\nless file.txt\n\n# Search in less: type `/search_term` and press Enter\n# Navigate: Space (next page), b (previous page), q (quit)\n```\n:::\n\n\n### `head` and `tail` - View Beginning/End of Files\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Show first 10 lines\nhead file.txt\n\n# Show first 20 lines\nhead -n 20 file.txt\n\n# Show last 10 lines\ntail file.txt\n\n# Show last 20 lines\ntail -n 20 file.txt\n\n# Follow file changes in real-time\ntail -f log_file.txt\n```\n:::\n\n\n## Basic Text Processing\n\n### `grep` - Search Text\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Search for text in file\ngrep \"search_term\" file.txt\n\n# Search case-insensitive\ngrep -i \"search_term\" file.txt\n\n# Search in multiple files\ngrep \"search_term\" *.txt\n\n# Search recursively in directories\ngrep -r \"search_term\" directory/\n\n# Show line numbers\ngrep -n \"search_term\" file.txt\n```\n:::\n\n\n### `wc` - Word Count\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Count lines, words, characters\nwc file.txt\n\n# Count only lines\nwc -l file.txt\n\n# Count only words\nwc -w file.txt\n\n# Count only characters\nwc -c file.txt\n```\n:::\n\n\n## Environment and System Information\n\n### `whoami` - Current User\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Show current username\nwhoami\n```\n:::\n\n\n### `uname` - System Information\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Show system information\nuname -a\n\n# Show operating system\nuname -s\n\n# Show machine architecture\nuname -m\n```\n:::\n\n\n### `df` - Disk Space Usage\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Show disk space usage\ndf -h\n```\n:::\n\n\n### `free` - Memory Usage\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Show memory usage\nfree -h\n```\n:::\n\n\n## Process Management\n\n### `ps` - List Processes\n\n::: {.cell}\n\n```{.bash .cell-code}\n# List running processes\nps\n\n# List all processes\nps aux\n\n# List processes for current user\nps u\n```\n:::\n\n\n### `top` - Monitor Processes\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Show running processes interactively\ntop\n\n# Press 'q' to quit\n```\n:::\n\n\n## Getting Help\n\n### `man` - Manual Pages\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Get help for a command\nman ls\n\n# Get help for a command (alternative)\nls --help\n```\n:::\n\n\n### `which` - Find Command Location\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Find where a command is located\nwhich python3\n\n# Find all locations\nwhich -a python3\n```\n:::\n\n\n## Example Workflow\n\nLet's practice with a complete example:\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Create a project directory\nmkdir -p my_project/data\ncd my_project\n\n# Create some files\ntouch data/sample1.txt data/sample2.txt\necho \"Hello World\" > data/sample1.txt\necho \"Linux is awesome\" > data/sample2.txt\n\n# List files\nls -la data/\n\n# View file contents\ncat data/sample1.txt\n\n# Search for text\ngrep \"Hello\" data/*.txt\n\n# Copy files\ncp data/sample1.txt backup_sample1.txt\n\n# Check permissions\nls -l data/\n\n# Change permissions\nchmod 644 data/sample1.txt\n\n# View file with line numbers\ncat -n data/sample1.txt\n```\n:::\n\n\n## Example shell command\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Your Linux/Bash code here \necho \"Hello from Bash!\" \nls -l\n```\n:::\n\n\n# WSL2 Installation Guide for Windows Users\n\nThis guide will help you install Windows Subsystem for Linux 2 (WSL2) and set up a Python development environment for running the IELTS AI Coach application.\n\n## Prerequisites\n\n- Windows 10 version 2004 and higher (Build 19041 and higher) or Windows 11\n- Administrator access to your computer\n- Stable internet connection\n\n## Step 1: Check Your Windows Version\n\nFirst, verify you have a compatible Windows version:\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Open Command Prompt and run:\nwinver\n```\n:::\n\n\nYou should see Windows 10 Build 19041+ or Windows 11.\n\n## Step 2: Enable WSL Feature\n\nOpen **Command Prompt as Administrator** (Right-click → \"Run as administrator\"):\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Enable WSL feature\ndism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart\n\n# Enable Virtual Machine Platform\ndism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart\n```\n:::\n\n\n**Important:** Restart your computer after running these commands.\n\n## Step 3: Install WSL2 (Modern Method)\n\nAfter restarting, open **Command Prompt as Administrator** again:\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Install WSL2 with Ubuntu (this is the easiest method)\nwsl --install\n```\n:::\n\n\nDo \"OK\" or \"Yes\" to agree if pop-ups appear. If this command doesn't work, use the manual method below.\n\n## Step 4: Manual Installation (If Step 3 Failed)\n\n### Download and Install WSL2 Kernel Update\n\n1. Download the WSL2 Linux kernel update package from Microsoft:\n   - [WSL2 Linux kernel update package for x64 machines](https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi)\n\n2. Run the downloaded `.msi` file and follow the installation wizard.\n\n### Set WSL2 as Default Version\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Set WSL2 as the default version\nwsl --set-default-version 2\n```\n:::\n\n\n### Install Ubuntu Distribution\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# List available distributions\nwsl --list --online\n#it will show all the availabe Linux distributions. Choose one of Ubuntus.\n\n# Install Ubuntu\nwsl --install -d Ubuntu\n```\n:::\n\n\n## Step 5: Alternative - Install via Microsoft Store\n\nIf command line installation fails:\n\n1. Open **Microsoft Store**\n2. Search for \"**Ubuntu 22.04.3 LTS**\" or just \"**Ubuntu**\"\n3. Click \"**Get**\" or \"**Install**\"\n4. Wait for download and installation\n5. Click \"**Launch**\" when ready\n\n## Step 6: First-Time Ubuntu Setup\n\nWhen you launch Ubuntu for the first time:\n\n1. **Wait for installation to complete** (this may take several minutes)\n2. **Create a username** when prompted (can be different from your Windows username)\n3. **Create a password** (you won't see characters as you type - this is normal)\n4. **Confirm your password**\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Example setup (replace 'yourusername' with your preferred username)\nEnter new UNIX username: yourusername\nNew password: [type your password]\nRetype new password: [type your password again]\n```\n:::\n\n\n## Step 7: Verify Installation\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Check WSL version and status\nwsl --list --verbose\n```\n:::\n\n\nYou should see output like:\n```\n  NAME      STATE           VERSION\n* Ubuntu    Running         2\n```\n\n## Step 8: Update Ubuntu System\n\nIn your Ubuntu terminal, run these commands one by one:\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Update package list\nsudo apt update\n\n# Upgrade installed packages (this may take a while)\nsudo apt upgrade\n```\n:::\n\n\n**Note:** When prompted, type `Y` and press Enter to confirm upgrades.\n\n## Step 9: Install Python Development Environment\nThis is required for latter use, not exactly now. You might choose not to do it right now. We will see things together.\n\n### Option A: Using Python Virtual Environment (Recommended)\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Install Python and essential tools\nsudo apt install python3 python3-pip python3-venv curl wget git\n\n# Verify Python installation\npython3 --version\npip3 --version\n```\n:::\n\n\n### Option B: Using Miniconda (Alternative)\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Download Miniconda installer\nwget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh\n\n# Install Miniconda\nbash Miniconda3-latest-Linux-x86_64.sh\n\n# Follow the installation prompts:\n# - Press ENTER to review the license\n# - Type 'yes' to accept the license\n# - Press ENTER to confirm the installation location\n# - Type 'yes' to initialize conda\n\n# Reload your shell configuration\nsource ~/.bashrc\n\n# Verify conda installation\nconda --version\n```\n:::\n\n\n## Step 10: Access Your Windows Files\n\nYour Windows files are accessible from Ubuntu at these locations:\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Your Windows C: drive\ncd /mnt/c/\n\ncd /mnt/c/Users/YourWindowsUsername/\n\n# Your Downloads folder\ncd /mnt/c/Users/YourWindowsUsername/Downloads/\n```\n:::\n\n`mnt` is to denote mounting. Your linux/ubuntu functionalities are actually mounted on Windows. Makes sense?\n\n# Your Windows user folder\n## Step 11: Copy Project Files\n\nTo copy your project from Windows to Ubuntu:\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Navigate to your home directory in Ubuntu\ncd ~\n\n# Copy project from Windows Downloads (adjust path as needed)\ncp -r /mnt/c/Users/YourWindowsUsername/Downloads/folderName ./\n\n# Navigate to the project\ncd folderName\n\n# List files to verify\nls -la\n```\n:::\n\n\n## Common Troubleshooting\n\n### Issue: \"WSL has no installed distributions\"\n\n**Solution:** You need to install a Linux distribution first.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# List available distributions\nwsl --list --online\n\n# Install Ubuntu\nwsl --install Ubuntu\n```\n:::\n\n\n### Issue: Command not found errors\n\n**Solution:** Make sure you're running commands in the correct environment:\n- WSL commands (`wsl --install`) should be run in **Windows Command Prompt as Administrator**\n- Linux commands (`sudo apt update`) should be run in **Ubuntu terminal**\n\n### Issue: Network/download problems\n\n**Solutions:**\n\n1. **Try different download mirrors:**\n\n::: {.cell}\n\n```{.bash .cell-code}\n# For Miniconda, try this mirror:\nwget https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/Miniconda3-latest-Linux-x86_64.sh\n```\n:::\n\n\n2. **Download via Windows browser and copy:**\n   - Download files using your Windows browser\n   - Copy to Ubuntu using `/mnt/c/` path\n\n### Issue: Permission denied\n\n**Solution:** Use `sudo` for system commands:\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Wrong:\napt update\n\n# Correct:\nsudo apt update\n```\n:::\n\n\n### Issue: Ubuntu terminal closes immediately\n\n**Solutions:**\n1. Make sure WSL2 is properly installed\n2. Restart your computer\n3. Try reinstalling Ubuntu from Microsoft Store\n\n## Useful WSL Commands\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# List all installed distributions\nwsl --list --verbose\n\n# Stop a distribution\nwsl --terminate Ubuntu\n\n# Start a specific distribution\nwsl -d Ubuntu\n\n# Uninstall a distribution\nwsl --unregister Ubuntu\n\n# Check WSL version\nwsl --version\n```\n:::\n\n\n## Opening Multiple Terminals\n\n### Method 1: Windows Terminal (Recommended)\n1. Install **Windows Terminal** from Microsoft Store\n2. Open Windows Terminal\n3. Click the dropdown arrow next to the `+` tab\n4. Select \"Ubuntu\"\n5. Use `Ctrl + Shift + T` for new tabs\n\n### Method 2: Direct Launch\n- Search \"Ubuntu\" in Start Menu\n- Click to open new instances\n\n## Next Steps\n\nOnce WSL2 and Ubuntu are properly installed:\n\n1. **Set up your development environment** (Python virtual environment or Conda)\n2. **Copy your project files** from Windows to Ubuntu\n3. **Install project dependencies**\n4. **Run your IELTS AI Coach application**\n\n## Additional Resources\n\n- [Official WSL Documentation](https://docs.microsoft.com/en-us/windows/wsl/)\n- [WSL2 Installation Guide](https://docs.microsoft.com/en-us/windows/wsl/install)\n- [Ubuntu WSL Documentation](https://ubuntu.com/wsl)\n\n\n**Need Help?** If you encounter issues not covered in this guide, please:\n1. Take a screenshot of the error message\n2. Note which step you were on\n3. Contact me\n",
    "supporting": [
      "basics_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}